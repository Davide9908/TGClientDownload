// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TGClientDownloadDAL;

#nullable disable

namespace TGClientDownloadDAL.Migrations
{
    [DbContext(typeof(TGDownDBContext))]
    [Migration("20240127220438_AddScheduledTask")]
    partial class AddScheduledTask
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TGClientDownloadDAL.Entities.ScheduledTask", b =>
                {
                    b.Property<int>("ScheduledTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ScheduledTaskId"));

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.Property<int>("Interval")
                        .HasColumnType("integer");

                    b.Property<string>("TasksName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ScheduledTaskId");

                    b.ToTable("ScheduledTask");
                });

            modelBuilder.Entity("TGClientDownloadDAL.Entities.TgChannel", b =>
                {
                    b.Property<int>("ChannelId")
                        .HasColumnType("integer");

                    b.Property<long>("AccessHash")
                        .HasColumnType("bigint");

                    b.Property<string>("ChannelName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.HasKey("ChannelId", "AccessHash");

                    b.ToTable("TgChannel");
                });
#pragma warning restore 612, 618
        }
    }
}
